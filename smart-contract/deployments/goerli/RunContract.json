{
  "address": "0xd956283e77D5156d7AF26666c02713d26af02ad0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAdd",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sum",
          "type": "uint256"
        }
      ],
      "name": "RegistrationEvent",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "companyAddress",
          "type": "address"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyTransactions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sum",
              "type": "uint256"
            }
          ],
          "internalType": "struct RunContract.Registration[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransactionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registrations",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sum",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd79965be78dda8772fef303b349604ca5421bb17d06d97b6bd3e96395d5c8ccc",
  "receipt": {
    "to": null,
    "from": "0xB9Cb978Bb175500Eb127c4580caAD60cb3226816",
    "contractAddress": "0xd956283e77D5156d7AF26666c02713d26af02ad0",
    "transactionIndex": 41,
    "gasUsed": "1484498",
    "logsBloom": "0x
    "blockHash": "0x65b346955d561a80eae9a2214785b52221bc385609d4fd8c80e877000ce11ab7",
    "transactionHash": "0xd79965be78dda8772fef303b349604ca5421bb17d06d97b6bd3e96395d5c8ccc",
    "logs": [],
    "blockNumber": 9177893,
    "cumulativeGasUsed": "6026351",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "4b7c1cc38d30a7d0a667c35ff21db321",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAdd\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"name\":\"RegistrationEvent\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"companyAddress\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyTransactions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"internalType\":\"struct RunContract.Registration[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registrations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RunContract.sol\":\"RunContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xf0c6a15fe3d04ec2ee99b2cd81eb0961c4522bea62dda22442da8333ae0de503\",\"license\":\"MIT\"},\"contracts/RunContract.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract RunContract {\\n    // variables and events\\n\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 10 * 1e18;\\n    address public immutable i_owner;\\n\\n    address[] public s_funders;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    uint256 transactionCount;\\n\\n    Registration[] public registrations;\\n\\n    struct Registration {\\n        address sender;\\n        address receiver;\\n        uint256 date;\\n        uint256 sum;\\n    }\\n\\n    event RegistrationEvent(\\n        address indexed sender,\\n        address indexed receiver,\\n        uint256 date,\\n        uint256 sum\\n    );\\n\\n    constructor(address priceFeedAdd) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAdd);\\n    }\\n\\n    // add money to contract and account\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Din't sent enough!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function getBalance() public view returns (uint256) {\\n        return s_addressToAmountFunded[msg.sender];\\n    }\\n\\n    function buy(\\n        address sender,\\n        uint256 date,\\n        uint256 sum,\\n        address companyAddress\\n    ) public {\\n        require(\\n            s_addressToAmountFunded[msg.sender] >= sum,\\n            \\\"Insufficient balance\\\"\\n        );\\n\\n        Registration memory registration = Registration(\\n            sender,\\n            i_owner,\\n            date,\\n            sum\\n        );\\n        registrations.push(registration);\\n        s_addressToAmountFunded[msg.sender] -= sum;\\n\\n        (bool success, ) = companyAddress.call{value: sum}(\\\"\\\");\\n\\n        require(success, \\\"registration failed\\\");\\n\\n        emit RegistrationEvent(sender, i_owner, date, sum);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        uint256 amount = s_addressToAmountFunded[msg.sender];\\n        require(amount > 0, \\\"No balance to withdraw\\\");\\n\\n        s_addressToAmountFunded[msg.sender] = 0;\\n        (bool success, ) = msg.sender.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Withdrawal failed\\\");\\n    }\\n\\n    function getMyTransactions() public view returns (Registration[] memory) {\\n        uint256 count = 0;\\n\\n        // Count the number of transactions related to the user\\n        for (uint256 i = 0; i < registrations.length; i++) {\\n            Registration memory transaction = registrations[i];\\n            if (\\n                transaction.sender == msg.sender ||\\n                transaction.receiver == msg.sender\\n            ) {\\n                count++;\\n            }\\n        }\\n\\n        // Create a new array to store the user's transactions\\n        Registration[] memory userTransactions = new Registration[](count);\\n        uint256 index = 0;\\n\\n        // Populate the userTransactions array with the user's transactions\\n        for (uint256 i = 0; i < registrations.length; i++) {\\n            Registration memory transaction = registrations[i];\\n            if (\\n                transaction.sender == msg.sender ||\\n                transaction.receiver == msg.sender\\n            ) {\\n                userTransactions[index] = transaction;\\n                index++;\\n            }\\n        }\\n\\n        return userTransactions;\\n    }\\n\\n    function getTransactionCount() public view returns (uint256) {\\n        return transactionCount;\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender == i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    // functions\\n}\\n\",\"keccak256\":\"0x7d77b720f66d2bc94a53e9e8a93b3832ca996367291e47ad51c099d9e030924e\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162001aff38038062001aff83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161197f6200018060003960008181610488015281816107340152818161094e0152610dda015261197f6000f3fe6080604052600436106100ab5760003560e01c806354861af71161006457806354861af7146101b55780636b69a592146101f257806397e4ca701461021d578063b60d428814610248578063dba6335f14610252578063f4ddb5be1461027d576100ba565b80630ec3b027146100c457806312065fe0146100ef5780631bf6132d1461011a5780632e7700f0146101575780633ccfd60b146101825780633f60b6331461018c576100ba565b366100ba576100b86102bd565b005b6100c26102bd565b005b3480156100d057600080fd5b506100d96103f7565b6040516100e6919061101c565b60405180910390f35b3480156100fb57600080fd5b5061010461041d565b6040516101119190611050565b60405180910390f35b34801561012657600080fd5b50610141600480360381019061013c91906110ae565b610464565b60405161014e9190611050565b60405180910390f35b34801561016357600080fd5b5061016c61047c565b6040516101799190611050565b60405180910390f35b61018a610486565b005b34801561019857600080fd5b506101b360048036038101906101ae9190611107565b610687565b005b3480156101c157600080fd5b506101dc60048036038101906101d7919061116e565b6109db565b6040516101e991906111aa565b60405180910390f35b3480156101fe57600080fd5b50610207610a1a565b6040516102149190611050565b60405180910390f35b34801561022957600080fd5b50610232610a26565b60405161023f91906112e7565b60405180910390f35b6102506102bd565b005b34801561025e57600080fd5b50610267610dd8565b60405161027491906111aa565b60405180910390f35b34801561028957600080fd5b506102a4600480360381019061029f919061116e565b610dfc565b6040516102b49493929190611309565b60405180910390f35b678ac7230489e800006102fb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610e7c90919063ffffffff16565b101561033c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610333906113ab565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103ee91906113fa565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60016020528060005260406000206000915090505481565b6000600354905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361050b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610592576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105899061147a565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516105fd906114cb565b60006040518083038185875af1925050503d806000811461063a576040519150601f19603f3d011682016040523d82523d6000602084013e61063f565b606091505b5050905080610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a9061152c565b60405180910390fd5b5050565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610709576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070090611598565b60405180910390fd5b600060405180608001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152509050600481908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030155505082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461089991906115b8565b9250508190555060008273ffffffffffffffffffffffffffffffffffffffff16846040516108c6906114cb565b60006040518083038185875af1925050503d8060008114610903576040519150601f19603f3d011682016040523d82523d6000602084013e610908565b606091505b505090508061094c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094390611638565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fe064f86097962618aec1b652f5a54aa9beb53d747dba98dcd1b6b40dbaa8213987876040516109cb929190611658565b60405180910390a3505050505050565b600081815481106109eb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b678ac7230489e8000081565b60606000805b600480549050811015610bbf57600060048281548110610a4f57610a4e611681565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161480610b9757503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b15610bab578280610ba7906116b0565b9350505b508080610bb7906116b0565b915050610a2c565b5060008167ffffffffffffffff811115610bdc57610bdb6116f8565b5b604051908082528060200260200182016040528015610c1557816020015b610c02610f49565b815260200190600190039081610bfa5790505b5090506000805b600480549050811015610dce57600060048281548110610c3f57610c3e611681565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161480610d8757503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b15610dba5780848481518110610da057610d9f611681565b5b60200260200101819052508280610db6906116b0565b9350505b508080610dc6906116b0565b915050610c1c565b5081935050505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60048181548110610e0c57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b600080610e8883610eb8565b90506000670de0b6b3a76400008583610ea19190611727565b610eab9190611798565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2a9190611856565b5050509150506402540be40081610f4191906118d1565b915050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610fe2610fdd610fd884610f9d565b610fbd565b610f9d565b9050919050565b6000610ff482610fc7565b9050919050565b600061100682610fe9565b9050919050565b61101681610ffb565b82525050565b6000602082019050611031600083018461100d565b92915050565b6000819050919050565b61104a81611037565b82525050565b60006020820190506110656000830184611041565b92915050565b600080fd5b600061107b82610f9d565b9050919050565b61108b81611070565b811461109657600080fd5b50565b6000813590506110a881611082565b92915050565b6000602082840312156110c4576110c361106b565b5b60006110d284828501611099565b91505092915050565b6110e481611037565b81146110ef57600080fd5b50565b600081359050611101816110db565b92915050565b600080600080608085870312156111215761112061106b565b5b600061112f87828801611099565b9450506020611140878288016110f2565b9350506040611151878288016110f2565b925050606061116287828801611099565b91505092959194509250565b6000602082840312156111845761118361106b565b5b6000611192848285016110f2565b91505092915050565b6111a481611070565b82525050565b60006020820190506111bf600083018461119b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6111fa81611070565b82525050565b61120981611037565b82525050565b60808201600082015161122560008501826111f1565b50602082015161123860208501826111f1565b50604082015161124b6040850182611200565b50606082015161125e6060850182611200565b50505050565b6000611270838361120f565b60808301905092915050565b6000602082019050919050565b6000611294826111c5565b61129e81856111d0565b93506112a9836111e1565b8060005b838110156112da5781516112c18882611264565b97506112cc8361127c565b9250506001810190506112ad565b5085935050505092915050565b600060208201905081810360008301526113018184611289565b905092915050565b600060808201905061131e600083018761119b565b61132b602083018661119b565b6113386040830185611041565b6113456060830184611041565b95945050505050565b600082825260208201905092915050565b7f44696e27742073656e7420656e6f756768210000000000000000000000000000600082015250565b600061139560128361134e565b91506113a08261135f565b602082019050919050565b600060208201905081810360008301526113c481611388565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061140582611037565b915061141083611037565b9250828201905080821115611428576114276113cb565b5b92915050565b7f4e6f2062616c616e636520746f20776974686472617700000000000000000000600082015250565b600061146460168361134e565b915061146f8261142e565b602082019050919050565b6000602082019050818103600083015261149381611457565b9050919050565b600081905092915050565b50565b60006114b560008361149a565b91506114c0826114a5565b600082019050919050565b60006114d6826114a8565b9150819050919050565b7f5769746864726177616c206661696c6564000000000000000000000000000000600082015250565b600061151660118361134e565b9150611521826114e0565b602082019050919050565b6000602082019050818103600083015261154581611509565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b600061158260148361134e565b915061158d8261154c565b602082019050919050565b600060208201905081810360008301526115b181611575565b9050919050565b60006115c382611037565b91506115ce83611037565b92508282039050818111156115e6576115e56113cb565b5b92915050565b7f726567697374726174696f6e206661696c656400000000000000000000000000600082015250565b600061162260138361134e565b915061162d826115ec565b602082019050919050565b6000602082019050818103600083015261165181611615565b9050919050565b600060408201905061166d6000830185611041565b61167a6020830184611041565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006116bb82611037565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116ed576116ec6113cb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061173282611037565b915061173d83611037565b925082820261174b81611037565b91508282048414831517611762576117616113cb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006117a382611037565b91506117ae83611037565b9250826117be576117bd611769565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6117e8816117c9565b81146117f357600080fd5b50565b600081519050611805816117df565b92915050565b6000819050919050565b61181e8161180b565b811461182957600080fd5b50565b60008151905061183b81611815565b92915050565b600081519050611850816110db565b92915050565b600080600080600060a086880312156118725761187161106b565b5b6000611880888289016117f6565b95505060206118918882890161182c565b94505060406118a288828901611841565b93505060606118b388828901611841565b92505060806118c4888289016117f6565b9150509295509295909350565b60006118dc8261180b565b91506118e78361180b565b92508282026118f58161180b565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561192d5761192c6113cb565b5b8282058414831517611942576119416113cb565b5b509291505056fea2646970667358221220e089a2784a55bd4c1636c0dc123d6dc6e95efb09c7bb5c49302dd2a0e664aa0564736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100ab5760003560e01c806354861af71161006457806354861af7146101b55780636b69a592146101f257806397e4ca701461021d578063b60d428814610248578063dba6335f14610252578063f4ddb5be1461027d576100ba565b80630ec3b027146100c457806312065fe0146100ef5780631bf6132d1461011a5780632e7700f0146101575780633ccfd60b146101825780633f60b6331461018c576100ba565b366100ba576100b86102bd565b005b6100c26102bd565b005b3480156100d057600080fd5b506100d96103f7565b6040516100e6919061101c565b60405180910390f35b3480156100fb57600080fd5b5061010461041d565b6040516101119190611050565b60405180910390f35b34801561012657600080fd5b50610141600480360381019061013c91906110ae565b610464565b60405161014e9190611050565b60405180910390f35b34801561016357600080fd5b5061016c61047c565b6040516101799190611050565b60405180910390f35b61018a610486565b005b34801561019857600080fd5b506101b360048036038101906101ae9190611107565b610687565b005b3480156101c157600080fd5b506101dc60048036038101906101d7919061116e565b6109db565b6040516101e991906111aa565b60405180910390f35b3480156101fe57600080fd5b50610207610a1a565b6040516102149190611050565b60405180910390f35b34801561022957600080fd5b50610232610a26565b60405161023f91906112e7565b60405180910390f35b6102506102bd565b005b34801561025e57600080fd5b50610267610dd8565b60405161027491906111aa565b60405180910390f35b34801561028957600080fd5b506102a4600480360381019061029f919061116e565b610dfc565b6040516102b49493929190611309565b60405180910390f35b678ac7230489e800006102fb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610e7c90919063ffffffff16565b101561033c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610333906113ab565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103ee91906113fa565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60016020528060005260406000206000915090505481565b6000600354905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361050b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610592576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105899061147a565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516105fd906114cb565b60006040518083038185875af1925050503d806000811461063a576040519150601f19603f3d011682016040523d82523d6000602084013e61063f565b606091505b5050905080610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a9061152c565b60405180910390fd5b5050565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610709576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070090611598565b60405180910390fd5b600060405180608001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152509050600481908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030155505082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461089991906115b8565b9250508190555060008273ffffffffffffffffffffffffffffffffffffffff16846040516108c6906114cb565b60006040518083038185875af1925050503d8060008114610903576040519150601f19603f3d011682016040523d82523d6000602084013e610908565b606091505b505090508061094c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094390611638565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fe064f86097962618aec1b652f5a54aa9beb53d747dba98dcd1b6b40dbaa8213987876040516109cb929190611658565b60405180910390a3505050505050565b600081815481106109eb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b678ac7230489e8000081565b60606000805b600480549050811015610bbf57600060048281548110610a4f57610a4e611681565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161480610b9757503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b15610bab578280610ba7906116b0565b9350505b508080610bb7906116b0565b915050610a2c565b5060008167ffffffffffffffff811115610bdc57610bdb6116f8565b5b604051908082528060200260200182016040528015610c1557816020015b610c02610f49565b815260200190600190039081610bfa5790505b5090506000805b600480549050811015610dce57600060048281548110610c3f57610c3e611681565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161480610d8757503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b15610dba5780848481518110610da057610d9f611681565b5b60200260200101819052508280610db6906116b0565b9350505b508080610dc6906116b0565b915050610c1c565b5081935050505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60048181548110610e0c57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b600080610e8883610eb8565b90506000670de0b6b3a76400008583610ea19190611727565b610eab9190611798565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2a9190611856565b5050509150506402540be40081610f4191906118d1565b915050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610fe2610fdd610fd884610f9d565b610fbd565b610f9d565b9050919050565b6000610ff482610fc7565b9050919050565b600061100682610fe9565b9050919050565b61101681610ffb565b82525050565b6000602082019050611031600083018461100d565b92915050565b6000819050919050565b61104a81611037565b82525050565b60006020820190506110656000830184611041565b92915050565b600080fd5b600061107b82610f9d565b9050919050565b61108b81611070565b811461109657600080fd5b50565b6000813590506110a881611082565b92915050565b6000602082840312156110c4576110c361106b565b5b60006110d284828501611099565b91505092915050565b6110e481611037565b81146110ef57600080fd5b50565b600081359050611101816110db565b92915050565b600080600080608085870312156111215761112061106b565b5b600061112f87828801611099565b9450506020611140878288016110f2565b9350506040611151878288016110f2565b925050606061116287828801611099565b91505092959194509250565b6000602082840312156111845761118361106b565b5b6000611192848285016110f2565b91505092915050565b6111a481611070565b82525050565b60006020820190506111bf600083018461119b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6111fa81611070565b82525050565b61120981611037565b82525050565b60808201600082015161122560008501826111f1565b50602082015161123860208501826111f1565b50604082015161124b6040850182611200565b50606082015161125e6060850182611200565b50505050565b6000611270838361120f565b60808301905092915050565b6000602082019050919050565b6000611294826111c5565b61129e81856111d0565b93506112a9836111e1565b8060005b838110156112da5781516112c18882611264565b97506112cc8361127c565b9250506001810190506112ad565b5085935050505092915050565b600060208201905081810360008301526113018184611289565b905092915050565b600060808201905061131e600083018761119b565b61132b602083018661119b565b6113386040830185611041565b6113456060830184611041565b95945050505050565b600082825260208201905092915050565b7f44696e27742073656e7420656e6f756768210000000000000000000000000000600082015250565b600061139560128361134e565b91506113a08261135f565b602082019050919050565b600060208201905081810360008301526113c481611388565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061140582611037565b915061141083611037565b9250828201905080821115611428576114276113cb565b5b92915050565b7f4e6f2062616c616e636520746f20776974686472617700000000000000000000600082015250565b600061146460168361134e565b915061146f8261142e565b602082019050919050565b6000602082019050818103600083015261149381611457565b9050919050565b600081905092915050565b50565b60006114b560008361149a565b91506114c0826114a5565b600082019050919050565b60006114d6826114a8565b9150819050919050565b7f5769746864726177616c206661696c6564000000000000000000000000000000600082015250565b600061151660118361134e565b9150611521826114e0565b602082019050919050565b6000602082019050818103600083015261154581611509565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b600061158260148361134e565b915061158d8261154c565b602082019050919050565b600060208201905081810360008301526115b181611575565b9050919050565b60006115c382611037565b91506115ce83611037565b92508282039050818111156115e6576115e56113cb565b5b92915050565b7f726567697374726174696f6e206661696c656400000000000000000000000000600082015250565b600061162260138361134e565b915061162d826115ec565b602082019050919050565b6000602082019050818103600083015261165181611615565b9050919050565b600060408201905061166d6000830185611041565b61167a6020830184611041565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006116bb82611037565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116ed576116ec6113cb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061173282611037565b915061173d83611037565b925082820261174b81611037565b91508282048414831517611762576117616113cb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006117a382611037565b91506117ae83611037565b9250826117be576117bd611769565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6117e8816117c9565b81146117f357600080fd5b50565b600081519050611805816117df565b92915050565b6000819050919050565b61181e8161180b565b811461182957600080fd5b50565b60008151905061183b81611815565b92915050565b600081519050611850816110db565b92915050565b600080600080600060a086880312156118725761187161106b565b5b6000611880888289016117f6565b95505060206118918882890161182c565b94505060406118a288828901611841565b93505060606118b388828901611841565b92505060806118c4888289016117f6565b9150509295509295909350565b60006118dc8261180b565b91506118e78361180b565b92508282026118f58161180b565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561192d5761192c6113cb565b5b8282058414831517611942576119416113cb565b5b509291505056fea2646970667358221220e089a2784a55bd4c1636c0dc123d6dc6e95efb09c7bb5c49302dd2a0e664aa0564736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 117,
        "contract": "contracts/RunContract.sol:RunContract",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 121,
        "contract": "contracts/RunContract.sol:RunContract",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 124,
        "contract": "contracts/RunContract.sol:RunContract",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 126,
        "contract": "contracts/RunContract.sol:RunContract",
        "label": "transactionCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 130,
        "contract": "contracts/RunContract.sol:RunContract",
        "label": "registrations",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_struct(Registration)139_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Registration)139_storage)dyn_storage": {
        "base": "t_struct(Registration)139_storage",
        "encoding": "dynamic_array",
        "label": "struct RunContract.Registration[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Registration)139_storage": {
        "encoding": "inplace",
        "label": "struct RunContract.Registration",
        "members": [
          {
            "astId": 132,
            "contract": "contracts/RunContract.sol:RunContract",
            "label": "sender",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 134,
            "contract": "contracts/RunContract.sol:RunContract",
            "label": "receiver",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 136,
            "contract": "contracts/RunContract.sol:RunContract",
            "label": "date",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 138,
            "contract": "contracts/RunContract.sol:RunContract",
            "label": "sum",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}