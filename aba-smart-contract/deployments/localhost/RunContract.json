{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAdd",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sum",
          "type": "uint256"
        }
      ],
      "name": "RegistrationEvent",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sum",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyTransactions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sum",
              "type": "uint256"
            }
          ],
          "internalType": "struct RunContract.Registration[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransactionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registrations",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sum",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x120bdb07c211e1f5338011ead4a494d9c613e81384c7b067cf794bdf1ed7e1b8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1474848",
    "logsBloom": "0x
    "blockHash": "0x4dd1f9508cd56e2e7b47a9a85d76705413e7ce3561f30a86edde61f4e333ed6c",
    "transactionHash": "0x120bdb07c211e1f5338011ead4a494d9c613e81384c7b067cf794bdf1ed7e1b8",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1474848",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "68361e08d0d74a5d46f5c6ca1110fec1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAdd\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"name\":\"RegistrationEvent\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyTransactions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"internalType\":\"struct RunContract.Registration[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registrations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RunContract.sol\":\"RunContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xf0c6a15fe3d04ec2ee99b2cd81eb0961c4522bea62dda22442da8333ae0de503\",\"license\":\"MIT\"},\"contracts/RunContract.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract RunContract {\\n    // variables and events\\n\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 10 * 1e18;\\n    address public immutable i_owner;\\n\\n    address[] public s_funders;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    uint256 transactionCount;\\n\\n    Registration[] public registrations;\\n\\n    struct Registration {\\n        address sender;\\n        address receiver;\\n        uint256 date;\\n        uint256 sum;\\n    }\\n\\n    event RegistrationEvent(\\n        address indexed sender,\\n        address indexed receiver,\\n        uint256 date,\\n        uint256 sum\\n    );\\n\\n    constructor(address priceFeedAdd) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAdd);\\n    }\\n\\n    // add money to contract and account\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Din't sent enough!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function getBalance() public view returns (uint256) {\\n        return s_addressToAmountFunded[msg.sender];\\n    }\\n\\n    function buy(address sender, uint256 date, uint256 sum) public {\\n        require(\\n            s_addressToAmountFunded[msg.sender] >= sum,\\n            \\\"Insufficient balance\\\"\\n        );\\n\\n        Registration memory registration = Registration(\\n            sender,\\n            i_owner,\\n            date,\\n            sum\\n        );\\n        registrations.push(registration);\\n        s_addressToAmountFunded[msg.sender] -= sum;\\n\\n        emit RegistrationEvent(sender, i_owner, date, sum);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Withdrawal failed\\\");\\n    }\\n\\n    function getMyTransactions() public view returns (Registration[] memory) {\\n        uint256 count = 0;\\n\\n        // Count the number of transactions related to the user\\n        for (uint256 i = 0; i < registrations.length; i++) {\\n            Registration memory transaction = registrations[i];\\n            if (\\n                transaction.sender == msg.sender ||\\n                transaction.receiver == msg.sender\\n            ) {\\n                count++;\\n            }\\n        }\\n\\n        // Create a new array to store the user's transactions\\n        Registration[] memory userTransactions = new Registration[](count);\\n        uint256 index = 0;\\n\\n        // Populate the userTransactions array with the user's transactions\\n        for (uint256 i = 0; i < registrations.length; i++) {\\n            Registration memory transaction = registrations[i];\\n            if (\\n                transaction.sender == msg.sender ||\\n                transaction.receiver == msg.sender\\n            ) {\\n                userTransactions[index] = transaction;\\n                index++;\\n            }\\n        }\\n\\n        return userTransactions;\\n    }\\n\\n    function getTransactionCount() public view returns (uint256) {\\n        return transactionCount;\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender == i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    // functions\\n}\\n\",\"keccak256\":\"0xbb82da69f055257e0bb2c4f7f9d9c319c9544ef454b1d31edac725c4e5d21f21\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162001ad638038062001ad683398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161194f62000187600039600081816104880152818161067e01528181610bf401528181610d620152610def015261194f6000f3fe6080604052600436106100ab5760003560e01c80636b69a592116100645780636b69a592146101c957806397e4ca70146101f4578063a59ac6dd1461021f578063b60d428814610248578063dba6335f14610252578063f4ddb5be1461027d576100ba565b80630ec3b027146100c457806312065fe0146100ef5780631bf6132d1461011a5780632e7700f0146101575780633ccfd60b1461018257806354861af71461018c576100ba565b366100ba576100b86102bd565b005b6100c26102bd565b005b3480156100d057600080fd5b506100d96103f7565b6040516100e691906110d8565b60405180910390f35b3480156100fb57600080fd5b5061010461041d565b604051610111919061110c565b60405180910390f35b34801561012657600080fd5b50610141600480360381019061013c919061116a565b610464565b60405161014e919061110c565b60405180910390f35b34801561016357600080fd5b5061016c61047c565b604051610179919061110c565b60405180910390f35b61018a610486565b005b34801561019857600080fd5b506101b360048036038101906101ae91906111c3565b61074a565b6040516101c091906111ff565b60405180910390f35b3480156101d557600080fd5b506101de610789565b6040516101eb919061110c565b60405180910390f35b34801561020057600080fd5b50610209610795565b604051610216919061133c565b60405180910390f35b34801561022b57600080fd5b506102466004803603810190610241919061135e565b610b47565b005b6102506102bd565b005b34801561025e57600080fd5b50610267610ded565b60405161027491906111ff565b60405180910390f35b34801561028957600080fd5b506102a4600480360381019061029f91906111c3565b610e11565b6040516102b494939291906113b1565b60405180910390f35b678ac7230489e800006102fb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610e9190919063ffffffff16565b101561033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033390611453565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103ee91906114a2565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60016020528060005260406000206000915090505481565b6000600354905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361050b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561058e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610544575b5050505050905060005b81518110156106195760008282815181106105b6576105b56114d6565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061061190611505565b915050610598565b50600067ffffffffffffffff8111156106355761063461154d565b5b6040519080825280602002602001820160405280156106635781602001602082028036833780820191505090505b5060009080519060200190610679929190610f5e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516106c0906115ad565b60006040518083038185875af1925050503d80600081146106fd576040519150601f19603f3d011682016040523d82523d6000602084013e610702565b606091505b5050905080610746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073d9061160e565b60405180910390fd5b5050565b6000818154811061075a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b678ac7230489e8000081565b60606000805b60048054905081101561092e576000600482815481106107be576107bd6114d6565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16148061090657503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b1561091a57828061091690611505565b9350505b50808061092690611505565b91505061079b565b5060008167ffffffffffffffff81111561094b5761094a61154d565b5b60405190808252806020026020018201604052801561098457816020015b610971610fe8565b8152602001906001900390816109695790505b5090506000805b600480549050811015610b3d576000600482815481106109ae576109ad6114d6565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161480610af657503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b15610b295780848481518110610b0f57610b0e6114d6565b5b60200260200101819052508280610b2590611505565b9350505b508080610b3590611505565b91505061098b565b5081935050505090565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc09061167a565b60405180910390fd5b600060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152509050600481908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030155505081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d59919061169a565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fe064f86097962618aec1b652f5a54aa9beb53d747dba98dcd1b6b40dbaa821398585604051610ddf9291906116ce565b60405180910390a350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60048181548110610e2157600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b600080610e9d83610ecd565b90506000670de0b6b3a76400008583610eb691906116f7565b610ec09190611768565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f9190611826565b5050509150506402540be40081610f5691906118a1565b915050919050565b828054828255906000526020600020908101928215610fd7579160200282015b82811115610fd65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610f7e565b5b509050610fe4919061103c565b5090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b5b8082111561105557600081600090555060010161103d565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061109e61109961109484611059565b611079565b611059565b9050919050565b60006110b082611083565b9050919050565b60006110c2826110a5565b9050919050565b6110d2816110b7565b82525050565b60006020820190506110ed60008301846110c9565b92915050565b6000819050919050565b611106816110f3565b82525050565b600060208201905061112160008301846110fd565b92915050565b600080fd5b600061113782611059565b9050919050565b6111478161112c565b811461115257600080fd5b50565b6000813590506111648161113e565b92915050565b6000602082840312156111805761117f611127565b5b600061118e84828501611155565b91505092915050565b6111a0816110f3565b81146111ab57600080fd5b50565b6000813590506111bd81611197565b92915050565b6000602082840312156111d9576111d8611127565b5b60006111e7848285016111ae565b91505092915050565b6111f98161112c565b82525050565b600060208201905061121460008301846111f0565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61124f8161112c565b82525050565b61125e816110f3565b82525050565b60808201600082015161127a6000850182611246565b50602082015161128d6020850182611246565b5060408201516112a06040850182611255565b5060608201516112b36060850182611255565b50505050565b60006112c58383611264565b60808301905092915050565b6000602082019050919050565b60006112e98261121a565b6112f38185611225565b93506112fe83611236565b8060005b8381101561132f57815161131688826112b9565b9750611321836112d1565b925050600181019050611302565b5085935050505092915050565b6000602082019050818103600083015261135681846112de565b905092915050565b60008060006060848603121561137757611376611127565b5b600061138586828701611155565b9350506020611396868287016111ae565b92505060406113a7868287016111ae565b9150509250925092565b60006080820190506113c660008301876111f0565b6113d360208301866111f0565b6113e060408301856110fd565b6113ed60608301846110fd565b95945050505050565b600082825260208201905092915050565b7f44696e27742073656e7420656e6f756768210000000000000000000000000000600082015250565b600061143d6012836113f6565b915061144882611407565b602082019050919050565b6000602082019050818103600083015261146c81611430565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114ad826110f3565b91506114b8836110f3565b92508282019050808211156114d0576114cf611473565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611510826110f3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361154257611541611473565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061159760008361157c565b91506115a282611587565b600082019050919050565b60006115b88261158a565b9150819050919050565b7f5769746864726177616c206661696c6564000000000000000000000000000000600082015250565b60006115f86011836113f6565b9150611603826115c2565b602082019050919050565b60006020820190508181036000830152611627816115eb565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006116646014836113f6565b915061166f8261162e565b602082019050919050565b6000602082019050818103600083015261169381611657565b9050919050565b60006116a5826110f3565b91506116b0836110f3565b92508282039050818111156116c8576116c7611473565b5b92915050565b60006040820190506116e360008301856110fd565b6116f060208301846110fd565b9392505050565b6000611702826110f3565b915061170d836110f3565b925082820261171b816110f3565b9150828204841483151761173257611731611473565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611773826110f3565b915061177e836110f3565b92508261178e5761178d611739565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6117b881611799565b81146117c357600080fd5b50565b6000815190506117d5816117af565b92915050565b6000819050919050565b6117ee816117db565b81146117f957600080fd5b50565b60008151905061180b816117e5565b92915050565b60008151905061182081611197565b92915050565b600080600080600060a0868803121561184257611841611127565b5b6000611850888289016117c6565b9550506020611861888289016117fc565b945050604061187288828901611811565b935050606061188388828901611811565b9250506080611894888289016117c6565b9150509295509295909350565b60006118ac826117db565b91506118b7836117db565b92508282026118c5816117db565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156118fd576118fc611473565b5b828205841483151761191257611911611473565b5b509291505056fea2646970667358221220f46d5c9bc5e94863d1ef9a67c8ca26545a664d8e45d3e6ecc97e4b4dc6e65f7c64736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100ab5760003560e01c80636b69a592116100645780636b69a592146101c957806397e4ca70146101f4578063a59ac6dd1461021f578063b60d428814610248578063dba6335f14610252578063f4ddb5be1461027d576100ba565b80630ec3b027146100c457806312065fe0146100ef5780631bf6132d1461011a5780632e7700f0146101575780633ccfd60b1461018257806354861af71461018c576100ba565b366100ba576100b86102bd565b005b6100c26102bd565b005b3480156100d057600080fd5b506100d96103f7565b6040516100e691906110d8565b60405180910390f35b3480156100fb57600080fd5b5061010461041d565b604051610111919061110c565b60405180910390f35b34801561012657600080fd5b50610141600480360381019061013c919061116a565b610464565b60405161014e919061110c565b60405180910390f35b34801561016357600080fd5b5061016c61047c565b604051610179919061110c565b60405180910390f35b61018a610486565b005b34801561019857600080fd5b506101b360048036038101906101ae91906111c3565b61074a565b6040516101c091906111ff565b60405180910390f35b3480156101d557600080fd5b506101de610789565b6040516101eb919061110c565b60405180910390f35b34801561020057600080fd5b50610209610795565b604051610216919061133c565b60405180910390f35b34801561022b57600080fd5b506102466004803603810190610241919061135e565b610b47565b005b6102506102bd565b005b34801561025e57600080fd5b50610267610ded565b60405161027491906111ff565b60405180910390f35b34801561028957600080fd5b506102a4600480360381019061029f91906111c3565b610e11565b6040516102b494939291906113b1565b60405180910390f35b678ac7230489e800006102fb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610e9190919063ffffffff16565b101561033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033390611453565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103ee91906114a2565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60016020528060005260406000206000915090505481565b6000600354905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361050b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561058e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610544575b5050505050905060005b81518110156106195760008282815181106105b6576105b56114d6565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061061190611505565b915050610598565b50600067ffffffffffffffff8111156106355761063461154d565b5b6040519080825280602002602001820160405280156106635781602001602082028036833780820191505090505b5060009080519060200190610679929190610f5e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516106c0906115ad565b60006040518083038185875af1925050503d80600081146106fd576040519150601f19603f3d011682016040523d82523d6000602084013e610702565b606091505b5050905080610746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073d9061160e565b60405180910390fd5b5050565b6000818154811061075a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b678ac7230489e8000081565b60606000805b60048054905081101561092e576000600482815481106107be576107bd6114d6565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16148061090657503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b1561091a57828061091690611505565b9350505b50808061092690611505565b91505061079b565b5060008167ffffffffffffffff81111561094b5761094a61154d565b5b60405190808252806020026020018201604052801561098457816020015b610971610fe8565b8152602001906001900390816109695790505b5090506000805b600480549050811015610b3d576000600482815481106109ae576109ad6114d6565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161480610af657503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16145b15610b295780848481518110610b0f57610b0e6114d6565b5b60200260200101819052508280610b2590611505565b9350505b508080610b3590611505565b91505061098b565b5081935050505090565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc09061167a565b60405180910390fd5b600060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152509050600481908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030155505081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d59919061169a565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fe064f86097962618aec1b652f5a54aa9beb53d747dba98dcd1b6b40dbaa821398585604051610ddf9291906116ce565b60405180910390a350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60048181548110610e2157600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b600080610e9d83610ecd565b90506000670de0b6b3a76400008583610eb691906116f7565b610ec09190611768565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f9190611826565b5050509150506402540be40081610f5691906118a1565b915050919050565b828054828255906000526020600020908101928215610fd7579160200282015b82811115610fd65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610f7e565b5b509050610fe4919061103c565b5090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b5b8082111561105557600081600090555060010161103d565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061109e61109961109484611059565b611079565b611059565b9050919050565b60006110b082611083565b9050919050565b60006110c2826110a5565b9050919050565b6110d2816110b7565b82525050565b60006020820190506110ed60008301846110c9565b92915050565b6000819050919050565b611106816110f3565b82525050565b600060208201905061112160008301846110fd565b92915050565b600080fd5b600061113782611059565b9050919050565b6111478161112c565b811461115257600080fd5b50565b6000813590506111648161113e565b92915050565b6000602082840312156111805761117f611127565b5b600061118e84828501611155565b91505092915050565b6111a0816110f3565b81146111ab57600080fd5b50565b6000813590506111bd81611197565b92915050565b6000602082840312156111d9576111d8611127565b5b60006111e7848285016111ae565b91505092915050565b6111f98161112c565b82525050565b600060208201905061121460008301846111f0565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61124f8161112c565b82525050565b61125e816110f3565b82525050565b60808201600082015161127a6000850182611246565b50602082015161128d6020850182611246565b5060408201516112a06040850182611255565b5060608201516112b36060850182611255565b50505050565b60006112c58383611264565b60808301905092915050565b6000602082019050919050565b60006112e98261121a565b6112f38185611225565b93506112fe83611236565b8060005b8381101561132f57815161131688826112b9565b9750611321836112d1565b925050600181019050611302565b5085935050505092915050565b6000602082019050818103600083015261135681846112de565b905092915050565b60008060006060848603121561137757611376611127565b5b600061138586828701611155565b9350506020611396868287016111ae565b92505060406113a7868287016111ae565b9150509250925092565b60006080820190506113c660008301876111f0565b6113d360208301866111f0565b6113e060408301856110fd565b6113ed60608301846110fd565b95945050505050565b600082825260208201905092915050565b7f44696e27742073656e7420656e6f756768210000000000000000000000000000600082015250565b600061143d6012836113f6565b915061144882611407565b602082019050919050565b6000602082019050818103600083015261146c81611430565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114ad826110f3565b91506114b8836110f3565b92508282019050808211156114d0576114cf611473565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611510826110f3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361154257611541611473565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061159760008361157c565b91506115a282611587565b600082019050919050565b60006115b88261158a565b9150819050919050565b7f5769746864726177616c206661696c6564000000000000000000000000000000600082015250565b60006115f86011836113f6565b9150611603826115c2565b602082019050919050565b60006020820190508181036000830152611627816115eb565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006116646014836113f6565b915061166f8261162e565b602082019050919050565b6000602082019050818103600083015261169381611657565b9050919050565b60006116a5826110f3565b91506116b0836110f3565b92508282039050818111156116c8576116c7611473565b5b92915050565b60006040820190506116e360008301856110fd565b6116f060208301846110fd565b9392505050565b6000611702826110f3565b915061170d836110f3565b925082820261171b816110f3565b9150828204841483151761173257611731611473565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611773826110f3565b915061177e836110f3565b92508261178e5761178d611739565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6117b881611799565b81146117c357600080fd5b50565b6000815190506117d5816117af565b92915050565b6000819050919050565b6117ee816117db565b81146117f957600080fd5b50565b60008151905061180b816117e5565b92915050565b60008151905061182081611197565b92915050565b600080600080600060a0868803121561184257611841611127565b5b6000611850888289016117c6565b9550506020611861888289016117fc565b945050604061187288828901611811565b935050606061188388828901611811565b9250506080611894888289016117c6565b9150509295509295909350565b60006118ac826117db565b91506118b7836117db565b92508282026118c5816117db565b91507f800000000000000000000000000000000000000000000000000000000000000084146000841216156118fd576118fc611473565b5b828205841483151761191257611911611473565b5b509291505056fea2646970667358221220f46d5c9bc5e94863d1ef9a67c8ca26545a664d8e45d3e6ecc97e4b4dc6e65f7c64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 117,
        "contract": "contracts/RunContract.sol:RunContract",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 121,
        "contract": "contracts/RunContract.sol:RunContract",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 124,
        "contract": "contracts/RunContract.sol:RunContract",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 126,
        "contract": "contracts/RunContract.sol:RunContract",
        "label": "transactionCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 130,
        "contract": "contracts/RunContract.sol:RunContract",
        "label": "registrations",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_struct(Registration)139_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Registration)139_storage)dyn_storage": {
        "base": "t_struct(Registration)139_storage",
        "encoding": "dynamic_array",
        "label": "struct RunContract.Registration[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Registration)139_storage": {
        "encoding": "inplace",
        "label": "struct RunContract.Registration",
        "members": [
          {
            "astId": 132,
            "contract": "contracts/RunContract.sol:RunContract",
            "label": "sender",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 134,
            "contract": "contracts/RunContract.sol:RunContract",
            "label": "receiver",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 136,
            "contract": "contracts/RunContract.sol:RunContract",
            "label": "date",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 138,
            "contract": "contracts/RunContract.sol:RunContract",
            "label": "sum",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}